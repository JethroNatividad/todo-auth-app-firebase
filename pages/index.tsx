import { onAuthStateChanged, signOut } from 'firebase/auth'
import { onSnapshot } from 'firebase/firestore'
import type { NextPage } from 'next'
import Head from 'next/head'
import { useRouter } from 'next/router'
import { useEffect, useState } from 'react'
import Navbar from '../components/Navbar'
import TodoList from '../components/TodoList'
import { signup } from '../lib/auth'
import { userRef } from '../lib/db'
import { auth } from '../lib/firebase'
import { UserData } from '../types'

const Home: NextPage = () => {
  const [user, setUser] = useState<UserData>({username: '', email:'', todos: []})
  const [loadingUser, setLoadingUser] = useState<boolean>(true)
  const router = useRouter()
  const signout = async () => {
    try {
      await signOut(auth)
      router.push('/login')
    } catch (error) {
      alert(error)
    }
  }
  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, async (user)=> {
      if(!user) return router.push('/login')
      try {
        setLoadingUser(true)
        onSnapshot(userRef(user.uid), (snapshot) => {
           const userData = snapshot.data()
           if(!userData) return signout()
           setUser(userData)
           // set loading once
           if(loadingUser) setLoadingUser(false)
        })
      
      } catch (error) {
        alert(error)
      }
    })
  
    return () => {
      unsubscribe()
    }
  }, [])

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar signout={signout} username={user.username} loading={loadingUser}/>
        <TodoList/>
      
      </div>
  )}

export default Home